# Decisions:
# Split ordersFrom property: Retailers ordering from both warehouses and manufacturers, therefore create separate properties ordersFromWarehouse and ordersFromManufacturer for better semantic clarity.
# Union ranges for polymorphic relationships: Used owl:unionOf for hasShipper and billedBy properties since shipments can originate from either warehouses or manufacturers, and invoices can be issued by either entity type.
# Disambiguated property names: Added entity-specific prefixes (e.g., supplierLocation, manufacturerLocation) to avoid naming conflicts while maintaining semantic clarity.
# Comprehensive cardinality modeling: Implemented all cardinality constraints including the critical business rule that orders must contain at least one product.




@prefix : <http://example.org/supplychain#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix math: <http://www.w3.org/2000/10/swap/math#> .
@prefix string: <http://www.w3.org/2000/10/swap/string#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix time: <http://www.w3.org/2000/10/swap/time#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .

# Ontology Declaration
<http://example.org/supplychain> a owl:Ontology ;
    rdfs:label "Advanced Supply Chain Ontology" ;
    rdfs:comment "A comprehensive supply chain ontology with business rules and intelligent automation capabilities" .

# ===== CORE CLASS DEFINITIONS =====

:Supplier a owl:Class ;
    rdfs:label "Supplier" ;
    rdfs:comment "An entity that provides raw materials or components to manufacturers" .

:Manufacturer a owl:Class ;
    rdfs:label "Manufacturer" ;
    rdfs:comment "An entity that produces finished goods from raw materials or components" .

:Warehouse a owl:Class ;
    rdfs:label "Warehouse" ;
    rdfs:comment "A facility for storing and distributing products" .

:Retailer a owl:Class ;
    rdfs:label "Retailer" ;
    rdfs:comment "An entity that sells products directly to end customers" .

:Product a owl:Class ;
    rdfs:label "Product" ;
    rdfs:comment "A manufactured item or good" .

:Order a owl:Class ;
    rdfs:label "Order" ;
    rdfs:comment "A request to purchase specific products" .

:Shipment a owl:Class ;
    rdfs:label "Shipment" ;
    rdfs:comment "A batch of products being transported from one location to another" .

:Invoice a owl:Class ;
    rdfs:label "Invoice" ;
    rdfs:comment "A bill requesting payment for products or services" .

# ===== DERIVED CLASSES FOR BUSINESS LOGIC =====

:PreferredSupplier a owl:Class ;
    rdfs:subClassOf :Supplier ;
    rdfs:label "Preferred Supplier" ;
    rdfs:comment "A supplier with high performance ratings and reliability" .

:CriticalSupplier a owl:Class ;
    rdfs:subClassOf :Supplier ;
    rdfs:label "Critical Supplier" ;
    rdfs:comment "A supplier providing essential materials with limited alternatives" .

:HighVolumeManufacturer a owl:Class ;
    rdfs:subClassOf :Manufacturer ;
    rdfs:label "High Volume Manufacturer" ;
    rdfs:comment "A manufacturer with large production capacity" .

:OvercapacityWarehouse a owl:Class ;
    rdfs:subClassOf :Warehouse ;
    rdfs:label "Overcapacity Warehouse" ;
    rdfs:comment "A warehouse operating above optimal capacity" .

:PremiumCustomer a owl:Class ;
    rdfs:subClassOf :Retailer ;
    rdfs:label "Premium Customer" ;
    rdfs:comment "A high-value customer with priority service" .

:UrgentOrder a owl:Class ;
    rdfs:subClassOf :Order ;
    rdfs:label "Urgent Order" ;
    rdfs:comment "An order requiring expedited processing" .

:LargeOrder a owl:Class ;
    rdfs:subClassOf :Order ;
    rdfs:label "Large Order" ;
    rdfs:comment "An order with high monetary value" .

:DelayedShipment a owl:Class ;
    rdfs:subClassOf :Shipment ;
    rdfs:label "Delayed Shipment" ;
    rdfs:comment "A shipment past its expected delivery date" .

:OverdueInvoice a owl:Class ;
    rdfs:subClassOf :Invoice ;
    rdfs:label "Overdue Invoice" ;
    rdfs:comment "An invoice past its payment due date" .

:FastMovingProduct a owl:Class ;
    rdfs:subClassOf :Product ;
    rdfs:label "Fast Moving Product" ;
    rdfs:comment "A product with high demand and turnover" .

:SlowMovingProduct a owl:Class ;
    rdfs:subClassOf :Product ;
    rdfs:comment "A product with low demand and turnover" .

:LowStockProduct a owl:Class ;
    rdfs:subClassOf :Product ;
    rdfs:label "Low Stock Product" ;
    rdfs:comment "A product with inventory below reorder point" .

# ===== CORE DATA PROPERTIES =====

# Supplier Properties
:supplierName a owl:DatatypeProperty ;
    rdfs:domain :Supplier ;
    rdfs:range xsd:string .

:supplierLocation a owl:DatatypeProperty ;
    rdfs:domain :Supplier ;
    rdfs:range xsd:string .

:rating a owl:DatatypeProperty ;
    rdfs:domain :Supplier ;
    rdfs:range xsd:float .

# Manufacturer Properties
:manufacturerName a owl:DatatypeProperty ;
    rdfs:domain :Manufacturer ;
    rdfs:range xsd:string .

:manufacturerLocation a owl:DatatypeProperty ;
    rdfs:domain :Manufacturer ;
    rdfs:range xsd:string .

:manufacturingCapacity a owl:DatatypeProperty ;
    rdfs:domain :Manufacturer ;
    rdfs:range xsd:int .

# Warehouse Properties
:warehouseName a owl:DatatypeProperty ;
    rdfs:domain :Warehouse ;
    rdfs:range xsd:string .

:warehouseLocation a owl:DatatypeProperty ;
    rdfs:domain :Warehouse ;
    rdfs:range xsd:string .

:storageCapacity a owl:DatatypeProperty ;
    rdfs:domain :Warehouse ;
    rdfs:range xsd:int .

# Retailer Properties
:retailerName a owl:DatatypeProperty ;
    rdfs:domain :Retailer ;
    rdfs:range xsd:string .

:retailerLocation a owl:DatatypeProperty ;
    rdfs:domain :Retailer ;
    rdfs:range xsd:string .

:retailerType a owl:DatatypeProperty ;
    rdfs:domain :Retailer ;
    rdfs:range xsd:string .

# Product Properties
:productName a owl:DatatypeProperty ;
    rdfs:domain :Product ;
    rdfs:range xsd:string .

:sku a owl:DatatypeProperty ;
    rdfs:domain :Product ;
    rdfs:range xsd:string .

:productType a owl:DatatypeProperty ;
    rdfs:domain :Product ;
    rdfs:range xsd:string .

:unitPrice a owl:DatatypeProperty ;
    rdfs:domain :Product ;
    rdfs:range xsd:float .

# Order Properties
:orderNumber a owl:DatatypeProperty ;
    rdfs:domain :Order ;
    rdfs:range xsd:string .

:orderDate a owl:DatatypeProperty ;
    rdfs:domain :Order ;
    rdfs:range xsd:date .

:orderStatus a owl:DatatypeProperty ;
    rdfs:domain :Order ;
    rdfs:range xsd:string .

:totalAmount a owl:DatatypeProperty ;
    rdfs:domain :Order ;
    rdfs:range xsd:float .

# Shipment Properties
:shipmentID a owl:DatatypeProperty ;
    rdfs:domain :Shipment ;
    rdfs:range xsd:string .

:shipDate a owl:DatatypeProperty ;
    rdfs:domain :Shipment ;
    rdfs:range xsd:date .

:carrier a owl:DatatypeProperty ;
    rdfs:domain :Shipment ;
    rdfs:range xsd:string .

:trackingNumber a owl:DatatypeProperty ;
    rdfs:domain :Shipment ;
    rdfs:range xsd:string .

# Invoice Properties
:invoiceNumber a owl:DatatypeProperty ;
    rdfs:domain :Invoice ;
    rdfs:range xsd:string .

:invoiceDate a owl:DatatypeProperty ;
    rdfs:domain :Invoice ;
    rdfs:range xsd:date .

:amountDue a owl:DatatypeProperty ;
    rdfs:domain :Invoice ;
    rdfs:range xsd:float .

:dueDate a owl:DatatypeProperty ;
    rdfs:domain :Invoice ;
    rdfs:range xsd:date .

# ===== CALCULATED AND DERIVED PROPERTIES =====

:currentInventoryLevel a owl:DatatypeProperty ;
    rdfs:domain :Product ;
    rdfs:range xsd:int ;
    rdfs:comment "Current inventory level for the product" .

:reorderPoint a owl:DatatypeProperty ;
    rdfs:domain :Product ;
    rdfs:range xsd:int ;
    rdfs:comment "Inventory level that triggers reorder" .

:leadTime a owl:DatatypeProperty ;
    rdfs:domain :Supplier ;
    rdfs:range xsd:int ;
    rdfs:comment "Lead time in days for supplier delivery" .

:onTimeDeliveryRate a owl:DatatypeProperty ;
    rdfs:domain :Supplier ;
    rdfs:range xsd:float ;
    rdfs:comment "Percentage of on-time deliveries" .

:totalOrderValue a owl:DatatypeProperty ;
    rdfs:domain :Retailer ;
    rdfs:range xsd:float ;
    rdfs:comment "Total value of all orders from this retailer" .

:capacityUtilization a owl:DatatypeProperty ;
    rdfs:domain :Warehouse ;
    rdfs:range xsd:float ;
    rdfs:comment "Percentage of warehouse capacity in use" .

:expectedDeliveryDate a owl:DatatypeProperty ;
    rdfs:domain :Shipment ;
    rdfs:range xsd:date ;
    rdfs:comment "Expected delivery date for the shipment" .

:discountAmount a owl:DatatypeProperty ;
    rdfs:domain :Order ;
    rdfs:range xsd:float ;
    rdfs:comment "Discount applied to the order" .

:finalAmount a owl:DatatypeProperty ;
    rdfs:domain :Order ;
    rdfs:range xsd:float ;
    rdfs:comment "Final amount after discounts" .

:daysOverdue a owl:DatatypeProperty ;
    rdfs:domain :Invoice ;
    rdfs:range xsd:int ;
    rdfs:comment "Number of days invoice is overdue" .

:turnoverRate a owl:DatatypeProperty ;
    rdfs:domain :Product ;
    rdfs:range xsd:float ;
    rdfs:comment "Product turnover rate per month" .

:averageOrderSize a owl:DatatypeProperty ;
    rdfs:domain :Retailer ;
    rdfs:range xsd:float ;
    rdfs:comment "Average order size for this retailer" .

# ===== CORE OBJECT PROPERTIES =====

:suppliesTo a owl:ObjectProperty ;
    rdfs:domain :Supplier ;
    rdfs:range :Manufacturer .

:manufactures a owl:ObjectProperty ;
    rdfs:domain :Manufacturer ;
    rdfs:range :Product .

:stores a owl:ObjectProperty ;
    rdfs:domain :Warehouse ;
    rdfs:range :Product .

:ordersFromWarehouse a owl:ObjectProperty ;
    rdfs:domain :Retailer ;
    rdfs:range :Warehouse .

:ordersFromManufacturer a owl:ObjectProperty ;
    rdfs:domain :Retailer ;
    rdfs:range :Manufacturer .

:hasOrderLine a owl:ObjectProperty ;
    rdfs:domain :Order ;
    rdfs:range :Product .

:shipsOrder a owl:ObjectProperty ;
    rdfs:domain :Shipment ;
    rdfs:range :Order .

:hasShipper a owl:ObjectProperty ;
    rdfs:domain :Shipment ;
    rdfs:range [ a owl:Class ; owl:unionOf ( :Warehouse :Manufacturer ) ] .

:billedBy a owl:ObjectProperty ;
    rdfs:domain :Invoice ;
    rdfs:range [ a owl:Class ; owl:unionOf ( :Warehouse :Manufacturer ) ] .

:billedTo a owl:ObjectProperty ;
    rdfs:domain :Invoice ;
    rdfs:range :Retailer .

# ===== CARDINALITY CONSTRAINTS =====

# A Supplier must supply to at least one Manufacturer.
:Supplier rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty :suppliesTo ;
    owl:minCardinality "1"^^xsd:nonNegativeInteger
] .

# A Manufacturer must manufacture at least one Product.
:Manufacturer rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty :manufactures ;
    owl:minCardinality "1"^^xsd:nonNegativeInteger
] .

# An Order must contain at least one Product.
:Order rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty :hasOrderLine ;
    owl:minCardinality "1"^^xsd:nonNegativeInteger
] .

# A Shipment must correspond to exactly one Order.
:Shipment rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty :shipsOrder ;
    owl:cardinality "1"^^xsd:nonNegativeInteger
] .

# A Shipment must have exactly one shipper (Warehouse or Manufacturer).
:Shipment rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty :hasShipper ;
    owl:cardinality "1"^^xsd:nonNegativeInteger
] .

# An Invoice must be billed by exactly one entity (Warehouse or Manufacturer).
:Invoice rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty :billedBy ;
    owl:cardinality "1"^^xsd:nonNegativeInteger
] .

# An Invoice must be billed to exactly one Retailer.
:Invoice rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty :billedTo ;
    owl:cardinality "1"^^xsd:nonNegativeInteger
] .

# ===== INVERSE PROPERTIES =====

:suppliedBy a owl:ObjectProperty ;
    owl:inverseOf :suppliesTo ;
    rdfs:domain :Manufacturer ;
    rdfs:range :Supplier .

:manufacturedBy a owl:ObjectProperty ;
    owl:inverseOf :manufactures ;
    rdfs:domain :Product ;
    rdfs:range :Manufacturer .

:storedIn a owl:ObjectProperty ;
    owl:inverseOf :stores ;
    rdfs:domain :Product ;
    rdfs:range :Warehouse .

:warehouseOrderedBy a owl:ObjectProperty ;
    owl:inverseOf :ordersFromWarehouse ;
    rdfs:domain :Warehouse ;
    rdfs:range :Retailer .

:manufacturerOrderedBy a owl:ObjectProperty ;
    owl:inverseOf :ordersFromManufacturer ;
    rdfs:domain :Manufacturer ;
    rdfs:range :Retailer .

:orderLineOf a owl:ObjectProperty ;
    owl:inverseOf :hasOrderLine ;
    rdfs:domain :Product ;
    rdfs:range :Order .

:shippedIn a owl:ObjectProperty ;
    owl:inverseOf :shipsOrder ;
    rdfs:domain :Order ;
    rdfs:range :Shipment .

:ships a owl:ObjectProperty ;
    owl:inverseOf :hasShipper ;
    rdfs:domain [ a owl:Class ; owl:unionOf ( :Warehouse :Manufacturer ) ] ;
    rdfs:range :Shipment .

:bills a owl:ObjectProperty ;
    owl:inverseOf :billedBy ;
    rdfs:domain [ a owl:Class ; owl:unionOf ( :Warehouse :Manufacturer ) ] ;
    rdfs:range :Invoice .

:receivesInvoice a owl:ObjectProperty ;
    owl:inverseOf :billedTo ;
    rdfs:domain :Retailer ;
    rdfs:range :Invoice .


# ===== SUPPLY CHAIN BUSINESS RULES =====

# Rule 1: Supplier Performance Classification
{
    ?supplier a :Supplier ;
              :rating ?rating ;
              :onTimeDeliveryRate ?deliveryRate .
    ?rating math:greaterThan 4.5 .
    ?deliveryRate math:greaterThan 95.0 .
} => {
    ?supplier a :PreferredSupplier .
} .

# Rule 2: Critical Supplier Identification
{
    ?supplier a :Supplier .
    ?supplier :suppliesTo ?manufacturer .
    ( ?supplier !:suppliesTo ) list:length ?supplierCount .
    ?supplierCount math:lessThan 3 .
} => {
    ?supplier a :CriticalSupplier .
} .

# Rule 3: High Volume Manufacturer Classification
{
    ?manufacturer a :Manufacturer ;
                  :manufacturingCapacity ?capacity .
    ?capacity math:greaterThan 10000 .
} => {
    ?manufacturer a :HighVolumeManufacturer .
} .

# Rule 4: Warehouse Capacity Utilization Calculation
{
    ?warehouse a :Warehouse ;
               :storageCapacity ?capacity .
    ( ?warehouse !:stores ) list:length ?storedProducts .
    ?storedProducts math:quotient ?capacity ?utilization .
    ?utilization math:product 100 ?utilizationPercent .
} => {
    ?warehouse :capacityUtilization ?utilizationPercent .
} .

# Rule 5: Overcapacity Warehouse Detection
{
    ?warehouse a :Warehouse ;
               :capacityUtilization ?utilization .
    ?utilization math:greaterThan 90.0 .
} => {
    ?warehouse a :OvercapacityWarehouse .
} .

# Rule 6: Premium Customer Recognition
{
    ?retailer a :Retailer .
    ( ?retailer !:ordersFromWarehouse !:hasOrderLine !:totalAmount ) math:sum ?totalOrderValue .
    ?totalOrderValue math:greaterThan 100000 .
} => {
    ?retailer a :PremiumCustomer ;
              :totalOrderValue ?totalOrderValue .
} .

# Rule 7: Large Order Classification
{
    ?order a :Order ;
           :totalAmount ?amount .
    ?amount math:greaterThan 50000 .
} => {
    ?order a :LargeOrder .
} .

# Rule 8: Volume Discount Calculation
{
    ?order a :Order ;
           :totalAmount ?amount .
    ?amount math:greaterThan 10000 .
    ?amount math:product 0.05 ?discount .
} => {
    ?order :discountAmount ?discount .
} .

{
    ?order a :Order ;
           :totalAmount ?amount .
    ?amount math:greaterThan 25000 .
    ?amount math:product 0.10 ?discount .
} => {
    ?order :discountAmount ?discount .
} .

# Rule 9: Final Order Amount Calculation
{
    ?order a :Order ;
           :totalAmount ?total ;
           :discountAmount ?discount .
    ?total math:minus ?discount ?finalAmount .
} => {
    ?order :finalAmount ?finalAmount .
} .

# Rule 10: Urgent Order Processing
{
    ?order a :Order ;
           :orderDate ?orderDate .
    ?order :hasOrderLine ?product .
    ?product a :LowStockProduct .
    ?now time:gmtime ?currentTime .
    ?orderDate time:inSeconds ?orderSec .
    ?currentTime time:inSeconds ?nowSec .
    ?nowSec math:minus ?orderSec ?ageInSeconds .
    ?ageInSeconds math:lessThan 3600 . # 1 hour
} => {
    ?order a :UrgentOrder ;
           :orderStatus "URGENT_PROCESSING" .
} .

# Rule 11: Expected Delivery Date Calculation
{
    ?shipment a :Shipment ;
              :shipDate ?shipDate ;
              :hasShipper ?shipper .
    ?shipper :supplierLocation ?location .
    ?location string:contains "Local" .
    ?shipDate time:inSeconds ?shipSec .
    ?shipSec math:sum 172800 ?deliverySec . # 2 days for local
    ?deliverySec time:gmtime ?expectedDate .
} => {
    ?shipment :expectedDeliveryDate ?expectedDate .
} .

{
    ?shipment a :Shipment ;
              :shipDate ?shipDate ;
              :hasShipper ?shipper .
    ?shipper :supplierLocation ?location .
    ?location string:contains "International" .
    ?shipDate time:inSeconds ?shipSec .
    ?shipSec math:sum 604800 ?deliverySec . # 7 days for international
    ?deliverySec time:gmtime ?expectedDate .
} => {
    ?shipment :expectedDeliveryDate ?expectedDate .
} .

# Rule 12: Delayed Shipment Detection
{
    ?shipment a :Shipment ;
              :expectedDeliveryDate ?expectedDate .
    ?now time:gmtime ?currentTime .
    ?expectedDate time:inSeconds ?expectedSec .
    ?currentTime time:inSeconds ?nowSec .
    ?nowSec math:greaterThan ?expectedSec .
} => {
    ?shipment a :DelayedShipment .
} .

# Rule 13: Overdue Invoice Detection
{
    ?invoice a :Invoice ;
             :dueDate ?dueDate .
    ?now time:gmtime ?currentTime .
    ?dueDate time:inSeconds ?dueSec .
    ?currentTime time:inSeconds ?nowSec .
    ?nowSec math:greaterThan ?dueSec .
    ?nowSec math:minus ?dueSec ?overdueSec .
    ?overdueSec math:quotient 86400 ?daysOverdue . # Convert to days
} => {
    ?invoice a :OverdueInvoice ;
             :daysOverdue ?daysOverdue .
} .

# Rule 14: Low Stock Detection
{
    ?product a :Product ;
             :currentInventoryLevel ?currentLevel ;
             :reorderPoint ?reorderPoint .
    ?currentLevel math:lessThanOrEqualTo ?reorderPoint .
} => {
    ?product a :LowStockProduct .
} .

# Rule 15: Automatic Reorder Generation
{
    ?product a :LowStockProduct ;
             :manufacturedBy ?manufacturer .
    ?manufacturer a :PreferredSupplier .
} => {
    _:reorder a :Order ;
              :orderDate ?today ;
              :hasOrderLine ?product ;
              :orderStatus "AUTO_GENERATED" .
} .

# Rule 16: Fast Moving Product Classification
{
    ?product a :Product ;
             :turnoverRate ?rate .
    ?rate math:greaterThan 5.0 . # More than 5 turnovers per month
} => {
    ?product a :FastMovingProduct .
} .

# Rule 17: Slow Moving Product Classification
{
    ?product a :Product ;
             :turnoverRate ?rate .
    ?rate math:lessThan 1.0 . # Less than 1 turnover per month
} => {
    ?product a :SlowMovingProduct .
} .

# Rule 18: Supplier Lead Time Adjustment
{
    ?supplier a :Supplier ;
              :leadTime ?baseLead ;
              :supplierLocation ?location .
    ?location string:contains "Remote" .
    ?baseLead math:product 1.5 ?adjustedLead .
} => {
    ?supplier :leadTime ?adjustedLead .
} .

# Rule 19: Priority Shipping for Premium Customers
{
    ?order a :Order ;
           :billedTo ?retailer .
    ?retailer a :PremiumCustomer .
} => {
    ?order :orderStatus "PRIORITY_SHIPPING" .
} .

# Rule 20: Carrier Selection Based on Location
{
    ?shipment a :Shipment ;
              :hasShipper ?shipper .
    ?shipper :warehouseLocation ?location .
    ?location string:contains "East Coast" .
} => {
    ?shipment :carrier "FEDEX_PRIORITY" .
} .

{
    ?shipment a :Shipment ;
              :hasShipper ?shipper .
    ?shipper :warehouseLocation ?location .
    ?location string:contains "West Coast" .
} => {
    ?shipment :carrier "UPS_GROUND" .
} .

# Rule 21: Quality Control Rules
{
    ?product a :Product ;
             :productType ?type .
    ?type string:contains "Pharmaceutical" .
    ?product :manufacturedBy ?manufacturer .
} => {
    ?product :requiresQualityCheck "true"^^xsd:boolean .
} .

# Rule 22: Seasonal Demand Adjustment
{
    ?product a :Product ;
             :productType ?type .
    ?type string:contains "Holiday" .
    ?now time:gmtime ?currentTime .
    ?currentTime time:month ?month .
    ?month math:greaterThan 10 . # November and December
} => {
    ?product :demandMultiplier 2.0 .
} .

# Rule 23: Supply Chain Risk Assessment
{
    ?supplier a :CriticalSupplier ;
              :supplierLocation ?location .
    ?location string:contains "High Risk Zone" .
} => {
    ?supplier :riskLevel "HIGH" .
} .

# Rule 24: Bulk Order Optimization
{
    ?order a :Order .
    ( ?order !:hasOrderLine ) list:length ?itemCount .
    ?itemCount math:greaterThan 10 .
} => {
    ?order :shippingOptimization "CONSOLIDATE_SHIPMENT" .
} .

# Rule 25: Customer Service Level Agreement
{
    ?retailer a :PremiumCustomer .
    ?retailer :ordersFromWarehouse ?warehouse .
} => {
    ?warehouse :serviceLevelAgreement "24_HOUR_PROCESSING" .
} .

